/*
  fpfriends.h

Copyright (c) 1988 Adobe Systems Incorporated.
All rights reserved.

NOTICE:  All information contained herein is the property of Adobe Systems
Incorporated.  Many of the intellectual and technical concepts contained
herein are proprietary to Adobe, are protected as trade secrets, and are made
available only to Adobe licensees for their internal use.  Any reproduction
or dissemination of this software is strictly forbidden unless prior written
permission is obtained from Adobe.

PostScript is a registered trademark of Adobe Systems Incorporated.
Display PostScript is a trademark of Adobe Systems Incorporated.

Original version: Ed Taft, April 1988
Edit History:
Ed Taft: Sat Apr 30 11:00:44 1988
End Edit History.

This interface is an adjunct to fp.h. The procedures defined here are not
used by the PostScript kernel; they are used only by the generic
implementations of other packages outside the kernel. If those packages
are replaced, these procedures may not be needed.
*/

#ifndef	FPFRIENDS_H
#define	FPFRIENDS_H

#include ENVIRONMENT
#include PUBLICTYPES

/*
 * Math Library Interface
 */

/*
   The following procedures correspond to standard C library procedures,
   but with an "os_" prefix. They can normally be implemented as a
   veneer over the standard C library procedures. However, some C
   libraries do not have such procedures. If that is the case, os_ecvt
   and os_fcvt can be implemented using the C library "sprintf";
   os_isinf and os_isnan can be dummies that always return false.

   No errors or exceptions can be generated by these procedures.
 */

/* Exported Procedures */

extern char *os_ecvt(/* double value, int ndigits, int *decpt, *sign */);
/* Converts value to a null-terminated string containing ndigits
   ASCII decimal digits and returns a pointer to the resulting string.
   The string contains no decimal point or other punctuation, only digits.
   The first digit in this string is the first significant digit of
   the number. The result is rounded to the specified number of digits.

   The position of the decimal point relative to the start of the string
   is returned in *decpt: zero means the decimal point immediately
   precedes the first digit; positive means *decpt places to the right;
   negative means -*decpt places to the left. The sign is returned in
   *sign: zero means positive; nonzero means negative.

   The string returned by this procedure is contained in static storage
   that is part of the implementation of the procedure itself. Thus,
   the caller must copy the string before calling os_ecvt (or os_fcvt)
   again.
 */

extern char *os_fcvt(/* double value, int ndigits, int *decpt, *sign */);
/* Similar to os_ecvt. However, ndigits specifies the number of digits
   to be produced to the right of the decimal point, rather than the
   total number of digits. Thus, the resulting string can have more
   or fewer than ndigits characters according to whether the first
   significant digit is to the left or to the right of the decimal
   point. (If there are no significant digits among the first ndigits
   digits to the right of the decimal point, the result string is empty.)
 */

extern boolean os_isinf(/* double d */);
/* Returns true if the argument d represents "infinity", either positive
   or negative. If the machine's floating point format does not have
   a representation for "infinity", returns false always.
 */

extern boolean os_isnan(/* double d */);
/* Returns true if the argument d is an invalid floating point number
   other than infinity.
 */

#endif	FPFRIENDS_H
